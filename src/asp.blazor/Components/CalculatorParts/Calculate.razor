@using asp.blazor.CalculatorSmc

<p>
    <button @onclick="Add" @ref="addButton" class="button"> + </button>
    <button @onclick="Sub" @ref="subButton" class="button"> - </button>
    <button @onclick="Mul" @ref="mulButton" class="button"> * </button>
    <button @onclick="Div" @ref="divButton" class="button"> / </button>
    <button @onclick="Pow" @ref="powButton" class="button">x<sup>2</sup></button>
    <button @onclick="Sqrt" @ref="sqrtButton" class="button">&radic;<span style='text-decoration: overline'>x</span></button>
    <button @onclick="Clr" @ref="clrButton" class="button"> C </button>
    <button @onclick="ClrAll" @ref="clrAllButton" class="button">CA</button>
</p>

<p>
    @((MarkupString)Main.StackHtmlString)
</p>

@code {
    [CascadingParameter(Name="Main")]
    private Calculator Main{ get; set; } = default!;
    public ElementReference addButton;
    public ElementReference subButton;
    public ElementReference mulButton;
    public ElementReference divButton;
    public ElementReference powButton;
    public ElementReference sqrtButton;
    public ElementReference clrButton;
    public ElementReference clrAllButton;

    private void Add()
    {
        Main.Fsm.Add(Main.Stack);
    }

    private void Sub()
    {
        Main.Fsm.Sub(Main.Stack);
    }

    private void Mul()
    {
        Main.Fsm.Mul(Main.Stack);
    }

    private void Div()
    {
        Main.Fsm.Div(Main.Stack);
    }

    private void Pow()
    {
        Main.Fsm.Pow(Main.Stack);
    }

    private void Sqrt()
    {
        Main.Fsm.Sqrt(Main.Stack);
    }

    private void Clr()
    {
        Main.Fsm.Clr(Main.Stack);
    }

    private void ClrAll()
    {
        Main.Fsm.ClrAll(Main.Stack);
    }
}
