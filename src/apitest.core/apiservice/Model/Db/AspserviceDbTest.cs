using apiservice.Model.Db;
using asplib.Model.Db;
using Microsoft.EntityFrameworkCore;
using NUnit.Framework;
using System.Collections.Generic;
using System.Data;
using System.Linq;

namespace apitest.apiservice.Model.Db
{
    /// <summary>
    /// Direct connection string, the same as autogenerated in AspserviceDbContext.cs
    /// </summary>
    [Category("Database")]
    [TestFixture]
    public class AspserviceDbTest : AspserviceDb, IGlobalTransaction
    {
        public List<DbContext> DbContexts { get; set; }

        [OneTimeSetUp]
        public void ConfigureServices()
        {
            _DbContext = ServiceProvider.Get<AspserviceDbContext>();
            this.RetrieveDbContexts();
        }

        [SetUp]
        public void BeginTrans()
        {
            this.BeginTransaction(IsolationLevel.ReadUncommitted);
        }

        [TearDown]
        public void RollbackTrans()
        {
            this.RollbackTransaction();
        }

        [Test]
        public void LoadTestSessionTest()
        {
            var query = from m in _DbContext.Main
                        where m.Session == DbTestData.SESSION
                        select m;
            var main = query.FirstOrDefault();
            Assert.That(main, Is.Not.Null);
            Assert.That(main.Session, Is.EqualTo(DbTestData.SESSION));
        }

        [Test]
        public void InsertAccesscodeTest()
        {
            var phonenumber = "55512345678";
            var accesscode = "654321";

            var accesscodeEntity = new Accesscode()
            {
                Session = DbTestData.SESSION,
                Phonenumber = phonenumber,
                Accesscode1 = accesscode
            };
            Insert(accesscodeEntity);

            var query = from a in _DbContext.Accesscode
                        where a.Session == DbTestData.SESSION &&
                              a.Phonenumber == phonenumber
                        select a;
            var retrieved = query.FirstOrDefault();
            Assert.That(retrieved.Phonenumber, Is.EqualTo(phonenumber));
            Assert.That(retrieved.Accesscode1, Is.EqualTo(accesscode));
        }
    }
}