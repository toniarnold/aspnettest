name: Build Core Libraries

on:
  workflow_dispatch:
  workflow_call:
  push:
    branches:
      - master

jobs:
  build-core:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    # Build libs.core
    - name: Restore dependencies
      run: dotnet restore libs.core.sln
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
    - name: Build .NET Core libraries
      run: msbuild libs.core.sln -property:noSmc=true,Configuration=Release

    # Test libs.core with SQL and create nuGet packages
    - name: Install SQL Server
      uses: Particular/install-sql-server-action@v1.0.2
      with:
        connection-string-env-var: ASP_DBEntities
        catalog: ASP_DB
    - name: Create [Main] table
      shell: pwsh
      run: sqlcmd -i ${{ github.workspace }}/src/asp.db/dbo/Tables/Main.sql -d "ASP_DB"
    - name: Test libs
      run: dotnet test libs.core.sln --configuration Release --no-build --verbosity normal

    - name: Create .nupkg packages
      run: dotnet pack libs.core.sln -property:noSmc=true --configuration Release --no-restore -o ${{ github.workspace }}/packages

    # Use the new asplib.core package to build and test apiservice
    - name: Create [Accesscode] table
      shell: pwsh
      run: |
        sqlcmd -i ${{ github.workspace }}/src/apiservice.db/dbo/Tables/Accesscode.sql -d "ASP_DB"
        sqlcmd -i ${{ github.workspace }}/src/apiservice.db/Scripts/Insert.Main.Accesscode.sql -d "ASP_DB"
    - name: Create local NuGet.Config
      shell: pwsh
      run: >
        @('<configuration>',
          '  <packageSources>',
          '    <add key="nuget.org" value="https://api.nuget.org/v3/index.json" protocolVersion="3" />',
          '    <add key="action-local" value="${{ github.workspace }}/packages/" />',
          '  </packageSources>',
          '</configuration>'
        ) | Set-Content -Path '${{ github.workspace }}/NuGet.Config'
    - name: Restore dependencies from above local source
      run: dotnet restore api.core.nuget.sln
    - name: Build api with local asplib.core package
      run: msbuild api.core.nuget.sln -property:noSmc=true,Configuration=Release
    - name: Test api
      run: dotnet test api.core.nuget.sln --configuration Release --no-build --verbosity normal
      env:
        "ConnectionStrings:ApiserviceDb": "${{ env.ASP_DBEntities }}"

    # Upload the packages when above smoke test was green
    - name: Upload .[s]nupkg packages
      uses: actions/upload-artifact@v3
      with:
        name: libs.core
        path: ${{ github.workspace }}/packages/*.*nupkg
        retention-days: 10
