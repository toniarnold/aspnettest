@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@addTagHelper *, asplib.core
@using minimal.Models
@using asplib.Model
@model WithStorageViewModel
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>storage</title>
    <style>
        h1 {
            font-size: 1.25em;
        }

        ul {
            list-style-type: none;
            margin: 0;
            padding: 0;
        }
    </style>
    <script>
        // Poor workaround for the ineffective "model.ContentTextBox = String.Empty;" in the controller
        function clearContentTextBox() {
            document.getElementById("ContentTextBox").value = "";
        }

        // Poor workaround for ASP.NET AutoPostBack="true"
        function doStoragePostBack(storage) {
            // "con­t­re cœur" client side: Immediately change the <input sessionstorage />
            // before the PostBack such that the StorageControllerActivator picks up
            // the newly chosen storage before the WithStorageController has a chance
            // to react to the ChangeStorage action.
            document.getElementById("sessionstorage").value = storage;
            document.forms[0].action = "/WithStorage/ChangeStorage";
            document.forms[0].submit();
    }
    </script>
</head>
<body onload="clearContentTextBox()">
    <form asp-controller="WithStorage" asp-action="Submit" method="post">
        <h1>minimalist test setup with storage</h1>
        Session Storage:<br />
        <input asp-for="Storage" type="radio" value="@Storage.ViewState" checked="checked" onclick="doStoragePostBack('ViewState');"/> ViewState
        <input asp-for="Storage" type="radio" value="@Storage.Session" onclick="doStoragePostBack('Session');"/> Session
        <input asp-for="Storage" type="radio" value="@Storage.Database" onclick="doStoragePostBack('Database');"/> Database
        <br />
        <input asp-for="ContentTextBox" />
        <button type="submit" id="submitButton">Submit</button>
        <ol>
            @foreach (var item in Model.Content)
            {
                <li>@item</li>
            }
        </ol>
        <input sessionstorage="@ViewBag.SessionStorage" id="sessionstorage"/>
        <input viewstate="@ViewBag.ViewState" />
    </form>
</body>
</html>
